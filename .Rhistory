completed_data
}
completed_data
corr("specdata")
corr <- function(directory, threshold = 0) {
completed_data <- complete(directory)
completed_data[,2]
}
corr("specdata")
corr <- function(directory, threshold = 0) {
no_complete <-numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
}
if(threshold>completed_data){
return(numeric())
} else {
}
}
corr("specdata")
corr <- function(directory, threshold = 0) {
no_complete <-numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
}
if(threshold>no_complete){
return(numeric())
} else {
}
}
corr("specdata")
corr <- function(directory, threshold = 0) {
no_complete <-numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
}
if(threshold>no_complete){
return ()
} else {
}
}
corr("specdata")
corr <- function(directory, threshold = 0) {
no_complete <-numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
}
if(threshold>no_complete){
return ()
} else {
print("yay")
}
}
corr("specdata")
corr <- function(directory, threshold = 0) {
no_complete <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
}
if(threshold>sum(no_complete)){
return ()
} else {
print("yay")
}
}
corr("specdata")
View(data)
View(data)
corr <- function(directory, threshold = 0) {
no_complete <- numeric()
nitrate_data <- numeric()
sulfate_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
sulfate_data<-c(sulfate_data,data1[complete.cases(data1),][,2])
nitrate_data<-c(nitrate_data,data1[complete.cases(data1),][,3])
}
if(threshold>sum(no_complete)){
return ()
} else {
cor(nitrate_data,sulfate_data)
}
}
corr("specdata")
cr<-corr("specdata")
summary(cr)
corr <- function(directory, threshold = 0) {
no_complete <- numeric()
nitrate_data <- numeric()
sulfate_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
sulfate_data<-c(sulfate_data,data1[complete.cases(data1),][,2])
nitrate_data<-c(nitrate_data,data1[complete.cases(data1),][,3])
}
print(sulfate_data)
print(nitrate_data)
if(threshold>sum(no_complete)){
return ()
} else {
cor(nitrate_data,sulfate_data)
}
}
cr
cr<-corr("specdata")
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
sulfate_data<-c(sulfate_data,data1[complete.cases(data1),][,2])
nitrate_data<-c(nitrate_data,data1[complete.cases(data1),][,3])
}
corr <- function(directory, threshold = 0) {
no_complete <- numeric()
nitrate_data <- numeric()
sulfate_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
sulfate_data<-c(sulfate_data,data1[complete.cases(data1),][,2])
nitrate_data<-c(nitrate_data,data1[complete.cases(data1),][,3])
}
if(threshold>sum(no_complete)){
return ()
} else {
cor(nitrate_data,sulfate_data)
}
}
cr<-corr("specdata")
cr
corr <- function(directory, threshold = 0) {
no_complete <- numeric()
nitrate_data <- numeric()
sulfate_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
no_complete=no_complete+sum(complete.cases(data1))
sulfate_data<-c(sulfate_data,data1[complete.cases(data1),][,2])
nitrate_data<-c(nitrate_data,data1[complete.cases(data1),][,3])
}
if(threshold>sum(no_complete)){
return ()
} else {
cor(sulfate_data,nitrate_data)
}
}
cr
cr<-corr("specdata")
cr
corr("specdata",5000)
cr<-corr("specdata",5000)
summary(cr)
corr <- function(directory, threshold = 0) {
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
if(threshold>sum(complete.cases(data1))){
return ()
} else {
sulfate_data<-data1[complete.cases(data1),][,2]
nitrate_data<-data1[complete.cases(data1),][,3]
cor(sulfate_data,nitrate_data)
}
}
}
cr<-corr("specdata")
summary(cr)
corr <- function(directory, threshold = 0) {
corr_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
if(threshold>sum(complete.cases(data1))){
return ()
} else {
sulfate_data<-data1[complete.cases(data1),][,2]
nitrate_data<-data1[complete.cases(data1),][,3]
corr_data<- c(corr_data,cor(sulfate_data,nitrate_data))
}
}
return(corr_data)
}
cr<-corr("specdata")
summary(cr)
cr
corr <- function(directory, threshold = 0) {
corr_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
if(threshold>sum(complete.cases(data1))){
sulfate_data<-data1[complete.cases(data1),][,2]
nitrate_data<-data1[complete.cases(data1),][,3]
corr_data<- c(corr_data,cor(sulfate_data,nitrate_data))
}
}
corr_data
}
cr<-corr("specdata")
cr
corr <- function(directory, threshold = 0) {
corr_data <- numeric()
for (i in 1:332) {
data1<-read.csv((list.files(directory,full.names = TRUE)[i]))
if(threshold<sum(complete.cases(data1))){
sulfate_data<-data1[complete.cases(data1),][,2]
nitrate_data<-data1[complete.cases(data1),][,3]
corr_data<- c(corr_data,cor(sulfate_data,nitrate_data))
}
}
corr_data
}
cr<-corr("specdata")
cr
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr
)
cr <- corr("specdata", 400)
summary(cr)
head(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc[[nobs]])
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
cc
cc[[nobs]]
cc[,2]
attributes(cc)
cc[["nobs""]]
cc["nobs"]
cc <- complete("specdata", 54)
cc
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
?rnorm
?runif
read.csv("specdata/001.csv")
data321<-read.csv("specdata/231.csv")
list.files()
list.files("specdata")
data231<-read.csv("specdata/231.csv")
data231$sulfate
data231$nitrate
complete <- function(directory, id=1:332){
id_no<-numeric()
nobs<-numeric()
for (i in 1:length(id)) {
data1<-read.csv((list.files(directory,full.names = TRUE)[id[i]]))
nobs<-c(nobs,nrow(data1[complete.cases(data1),]))
id_no<-c(id_no,id[i])
}
data_to_compute<-cbind(id_no,nobs)
data_to_compute
}
complete("specdata",231)
abcdata<-complete("specdata",1:332)
abcdata
abcdata$nobs
class(abcdata)
attributes(abcdata)
abcdata[,2]
complete <- function(directory, id=1:332){
id_no<-numeric()
nobs<-numeric()
for (i in 1:length(id)) {
data1<-read.csv((list.files(directory,full.names = TRUE)[id[i]]))
nobs<-c(nobs,nrow(data1[complete.cases(data1),]))
id_no<-c(id_no,id[i])
}
data_to_compute<-data.fame()
data_to_compute<-cbind(id_no,nobs)
data_to_compute
}
abcdata<-complete("specdata",1:100)
complete <- function(directory, id=1:332){
id_no<-numeric()
nobs<-numeric()
for (i in 1:length(id)) {
data1<-read.csv((list.files(directory,full.names = TRUE)[id[i]]))
nobs<-c(nobs,nrow(data1[complete.cases(data1),]))
id_no<-c(id_no,id[i])
}
data_to_compute<-data.frame()
data_to_compute<-cbind(id_no,nobs)
data_to_compute
}
abcdata<-complete("specdata",1:100)
abcdata$nobs
class(abcdata)
?data.frame
complete <- function(directory, id=1:332){
id_no<-numeric()
nobs<-numeric()
for (i in 1:length(id)) {
data1<-read.csv((list.files(directory,full.names = TRUE)[id[i]]))
nobs<-c(nobs,nrow(data1[complete.cases(data1),]))
id_no<-c(id_no,id[i])
}
data_to_compute<-data.frame(id_no,nobs)
data_to_compute
}
abcdata<-complete("specdata",1:100)
class(abcdata)
abcdata$nobs
?gl
?list
x<-gl(2,5)
y<-gl(5,2)
?gl
list(x,y,)
list(x,y)
z<- rnorm(10)
split(z,list(x,y))
?set.seed
?traceback
lm
swirl()
library(swirl)
swirl()
head(flags)
View(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colours<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
rm(flag_colours)
play()
rm(flag_colours)
next
next()
nxt()
View(flag_colours)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6)
swirl
swirl()
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
pl()
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
flags$landmass
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
iris
View(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
?apply
colMeans(iris)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
data(mtcars)
mtcars
View(mtcars)
?mean
mean(mtcars$mpg, mtcars$cyl)
?with
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$hp,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)["4"]
abs(tapply(mtcars$hp,mtcars$cyl,mean)["4"]-tapply(mtcars$hp,mtcars$cyl,mean)["8"])
4cyl<-tapply(mtcars$hp,mtcars$cyl,mean)["4"]
cyl4<-tapply(mtcars$hp,mtcars$cyl,mean)["4"]
cyl8<-tapply(mtcars$hp,mtcars$cyl,mean)["8"]
cyl8-cyl4
debug(ls)
ls
ls()
m
?debug
d
done
done()
q
q
undebug(ls)
end
undebug(ls)
Q
ls()
undebug(ls)
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
x<-tapply(mtcars$hp,mtcars$cyl,mean)
x["4"]-x["8"]
?message
getwd()
list.files()
setwd("ProgrammingAssignment2")
list.files
list.files()
setwd("ProgrammingAssignment2/")
list.files()
source("cachematrix.R")
View(cacheSolve)
?solve
solve
testmatrix<-matrix(rnorm(16),nrow = 4,ncol=4)
View(testmatrix)
testmatrix
solve(testmatrix)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
testvect<-sample(1:100,50)
testvect<-makeVector(sample(1:100,50))
cachesolve(testvect)
cachemean(testvect)
cachemean(testvect)
testvect$set(sample(1:10000),10000)
testvect$set(sample(1:10000,10000))
system.time(cachemean(testvect))
cachemean(testvect)
system.time(cachemean(testvect))
system.time(mean(sample(1:10000,10000)))
setwd(~)
setwd(Desktop)
setwd(/Desktop)
setwd(desktop/)
setwd("Coursera R directory")
